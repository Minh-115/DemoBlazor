@page "/products/edit/{id:int}"
@using BlazorApp.Data
@using BlazorApp.Models
@inject AppDbContext DbContext
@inject NavigationManager Navigation
@using BlazorApp.Repositories.ProductRepository
@using System.ComponentModel.DataAnnotations
@inject IProductRepository ProductRepository
@inject IConfiguration _configuration
@rendermode InteractiveServer
<h3>Edit Product</h3>

<EditForm Model="@product" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name:</label>
        <InputText @bind-Value="product.Name" />
        <ValidationMessage For="@(() => product.Name)" />
    </div>

    <div class="form-group">
        <label>Price:</label>
        <InputNumber @bind-Value="product.Price" />
        <ValidationMessage For="@(() => product.Price)" />
    </div>

    <div class="form-group">
        <label>Quantity:</label>
        <InputNumber @bind-Value="product.Quantity" />
        <ValidationMessage For="@(() => product.Quantity)" />
    </div>

    <button type="submit">Save</button>
</EditForm>

@code {
    [Parameter] public int id { get; set; }
    private Product product = new Product();
    protected override async Task OnInitializedAsync()
    {
        product = await DbContext.Products.FindAsync(id) ?? new Product();
    }

    private async Task HandleSubmit()
    {
        var getUser = _configuration["ApiEndpoints:GetUser"];
        if (id <= 0)
        {
            await ProductRepository.AddAsync(product);
        }
        else
        {
            await ProductRepository.UpdateAsync(product);
        }
        Navigation.NavigateTo("/products");
    }
}
